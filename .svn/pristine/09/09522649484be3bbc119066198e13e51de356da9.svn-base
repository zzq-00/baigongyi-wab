<!-- 收藏的直播回放 -->
<template>
  <div class="collect-answers-page">
    <p class="operation" v-if="!manageStatus&&$route.query.own!='Others'">
      <button @click="manageStatus=!manageStatus">批量管理</button>
    </p>
    <p class="operation manage-btn" v-if="manageStatus&&$route.query.own!='Others'">
      <el-checkbox v-model="checkAll" @change="handleCheckAllChange">全部</el-checkbox>
      <button @click="batchCancellation">取消收藏</button>
      <button @click="escManage">退出批量管理</button>
    </p>
    <ul v-loading="answerLoading" element-loading-text="正在加载" infinite-scroll-disabled='loadStatus' v-infinite-scroll="answerlistLoad" infinite-scroll-immediate='false' infinite-scroll-distance='67'>
      <li v-for="(item,index) in collectLivesList" :key="index" class="clearfix">
        <div>
          <el-checkbox v-model="item.checked" @change="handleChecked(item)" v-if="manageStatus" class="fl"></el-checkbox>
          <div v-if="item.status!=0" class="fl clearfix qa-info" :class="[manageStatus?'check-answer':'normal-answer']">
            <img :src="item.homeImage" alt="" class="lives-img fl">
            <div class="fl live-info" :class="{'live-infoOthers':$route.query.own=='Others','live-infoManage':manageStatus&&$route.query.own!='Others','live-infoNor':(!manageStatus)&&$route.query.own!='Others'}">
              <p class="list-title" style="cursor:pointer" @click="gotoDetails(item)">{{item.title}}</p>
              <p class="lives-time">{{item.publishTime}}</p>
              <p class="lives-type">{{item.type==1?'视频':''}}</p>
              <div class="live-btn clearfix">
                <p class="lives-price fl">{{item.price==0?'免费':item.price}}</p>
                <div class="cancel-btn fr" v-if="!manageStatus&&$route.query.own!='Others'">
                  <button @click="collectOperate(item,index)">取消收藏</button>
                </div>
              </div>
            </div>
          </div>
          <div v-if="item.status==0" class="fl clearfix qa-info" :class="[manageStatus?'check-answer':'normal-answer']">
            <img src="@/assets/images/live-delete.png" alt="" class="lives-img fl">
            <div class="fl live-info" :class="{'live-infoOthers':$route.query.own=='Others','live-infoManage':manageStatus&&$route.query.own!='Others','live-infoNor':(!manageStatus)&&$route.query.own!='Others'}">
              <p class="list-title" style="cursor:not-allowed">{{item.title}}</p>
              <div class="live-btn clearfix">
                <div class="cancel-btn fr" v-if="!manageStatus&&$route.query.own!='Others'">
                  <button @click="collectOperate(item,index)">取消收藏</button>
                </div>
              </div>
            </div>
          </div>
        </div>

      </li>
    </ul>
  </div>
</template>

<script>
import api from '@/fetch'
export default {
  components: {},
  data() {
    return {
      answerLoading: true,
      loadStatus: false,
      manageStatus: false,
      checkAll: false, //全选
      params: {
        asc: true,
        orderBy: 'id',
        pageNum: 1,
        pageSize: 10,
        keywords: ''
      },
      collectLivesList: [], //收藏的回答
      loginaccountId: '',
      selectArr: []
    }
  },
  watch: {},
  computed: {},
  methods: {
    gotoDetails(item) {
      // answerWhetherItExists false是回答不存在 true是可以点击
      if (item.status != 0) {
        let routeUrl = this.$router.resolve(`/livetv/${item.id}`)
        window.open(routeUrl.href, '_blank')
      }
    },
    // 最赞回答
    answerlistLoad() {
      this.loadStatus = true
      this.params.pageNum += 1
      this.liveHomeCollectionList()
    },
    liveHomeCollectionList() {
      if (this.$route.query.own == 'Others') {
        this.params.keywords = this.$route.query.id
      } else {
        this.params.keywords = this.loginaccountId
      }
      api.liveHomeCollectionList(this.params).then(res => {
        this.collectLivesList = this.collectLivesList.concat(res.data.records)
        // if (res.data.records.length == 0) {
        //   this.newloadText = '暂无更多数据'
        // } else {
        //   this.newloadText = ''
        // }
        this.answerLoading = false //加载状态
        this.loadStatus = false
      })
    },
    // 批量取消收藏
    batchCancellation() {
      if (this.selectArr.length == 0) {
        this.$message({
          showClose: true,
          message: '请勾选要取消收藏的选项',
          type: 'warning'
        })
      } else {
        this.$confirm(`您已勾选${this.selectArr.length}个直播回放，是否确认取消收藏？`, '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        })
          .then(() => {
            api.batchCancelCollect(this.selectArr).then(res => {
              this.params.pageNum = 1
              this.collectLivesList = []
              this.liveHomeCollectionList()
              this.$store.commit('setFollow', !this.$store.state.cancelStatus)
            })
          })
          .catch(() => {
            this.$message({
              type: 'info',
              message: '已取消删除'
            })
          })
      }
    },
    // 退出批量管理
    escManage() {
      this.manageStatus = false
      this.selectArr = []
      this.checkAll = false
      this.collectLivesList.map(item => {
        item.checked = false
      })
    },
    // 收藏取消收藏
    collectOperate(item, index) {
      api.cancelCollect({ objType: 5, objId: item.id }).then(res => {
        this.collectLivesList.splice(index, 1)
        this.$store.commit('setFollow', !this.$store.state.cancelStatus)
      })
    },
    //   全选/取消
    handleCheckAllChange(val) {
      let arr = []
      this.collectLivesList.map(item => {
        if (val) {
          item.checked = true
        } else {
          item.checked = false
        }
        arr.push({ objId: item.id, objType: 5 })
      })
      this.selectArr = arr
    },
    handleChecked(item) {
      console.log(item)
      item.checked != item.checked
      let arr = []
      this.collectLivesList.map(item => {
        if (item.checked) {
          arr.push({ objId: item.id, objType: 5 })
        }
      })
      this.selectArr = arr
      if (arr.length == this.collectLivesList.length) {
        this.checkAll = true
      } else {
        this.checkAll = false
      }
    }
  },
  mounted() {
    this.loginaccountId = JSON.parse(window.localStorage.getItem('userInfo')).accountId
    this.liveHomeCollectionList()
  }
}
</script>
<style lang="less" scoped>
.collect-answers-page {
  .operation {
    padding: 10px 0 0 20px;
    /deep/.el-checkbox {
      margin-right: 30px;
    }
    button {
      height: 32px;
      line-height: 32px;
      padding: 0 17px;
      background: rgba(255, 255, 255, 1);
      border: 1px solid rgba(153, 153, 153, 1);
      border-radius: 5px;
      font-size: 14px;
      font-weight: 400;
      color: rgba(74, 74, 74, 1);
      margin-right: 10px;
    }
    button:hover {
      cursor: pointer;
      color: #e23732;
      border: 1px solid #e23732;
    }
  }
  ul {
    width: 100%;
    min-height: 50px;
    height: calc(100vh - 518px);
    overflow: auto;
    padding-bottom: 67px;
    li {
      padding: 10px 20px;
      position: relative;
      /deep/.el-checkbox {
        position: absolute;
        top: 50%;
        transform: translate(0, -50%);
      }
      .qa-info {
        .lives-img {
          width: 200px;
          height: 118px;
          border-radius: 5px;
          margin-right: 21px;
        }
        .live-info {
          .list-title {
            width: 100%;
            height: 17px;
            font-size: 16px;
            font-weight: bold;
            color: rgba(51, 51, 51, 1);
            line-height: 17px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            margin-top: 9px;
          }
          .lives-time {
            height: 11px;
            line-height: 11px;
            font-size: 14px;
            color: rgba(153, 153, 153, 1);
            margin-top: 11px;
          }
          .lives-type {
            width: 44px;
            height: 20px;
            background: rgba(255, 255, 255, 1);
            border-radius: 3px;
            background: #f2f2f2;
            margin-top: 11px;
            text-align: center;
          }
          .live-btn {
            margin-top: 9px;
            .lives-price {
              height: 17px;
              line-height: 17px;
              font-size: 16px;
              font-weight: 400;
              color: rgba(115, 85, 246, 1);
              margin-top: 13px;
            }
          }
        }
        .live-info::after {
          content: '';
          display: inline-block;
          position: absolute;
          bottom: 0px;
          right: 0px;
          height: 1px;
          background-color: #dddddd;
        }
        .live-infoOthers {
          width: 518px;
        }
        .live-infoOthers::after {
          width: 539px;
        }
        .live-infoManage {
          width: 327px;
        }
        .live-infoManage::after {
          width: 353px;
        }
        .live-infoNor {
          width: 362px;
        }
        .live-infoNor::after {
          width: 382px;
        }

        .cancel-btn {
          text-align: right;
          button {
            width: 88px;
            height: 34px;
            line-height: 32px;
            border: 1px solid rgba(230, 230, 230, 1);
            border-radius: 5px;
            text-align: center;
            background: #fff;
            cursor: pointer;
            font-size: 14px;
            color: rgba(102, 102, 102, 1);
          }
          button:hover {
            border: 1px solid #e23732;
            color: #e23732;
          }
        }
      }
      .check-answer {
        margin-left: 30px;
        width: 94%;
      }
      .normal-answer {
        width: 100%;
      }
    }
  }
  ul::-webkit-scrollbar {
    display: none;
    overflow: hidden;
  }
}
</style>