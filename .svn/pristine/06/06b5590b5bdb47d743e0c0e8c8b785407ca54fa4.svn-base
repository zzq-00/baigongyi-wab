<template>
  <div class="container">
    <h4>{{$route.path.includes('publishArticle')?'创建文章':'重新编辑'}}</h4>
    <div class="clearfix content-area">
      <!-- 左侧上传封面图 -->
      <div class="left-content fl">
        <uploadPic type="hasButton" v-model="ruleForm.image" :value="ruleForm.image" :description="uploadDesc" />
      </div>
      <!-- 右侧填写文章内容 -->
      <div class="right-content fl">
        <el-form label-position="top" :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">
          <el-form-item label="文章名称" prop="title">
            <el-input v-model="ruleForm.title" maxlength="50" show-word-limit></el-input>
          </el-form-item>
          <el-form-item label="文章摘要" prop="description">
            <el-input type="textarea" v-model="ruleForm.description" :autosize="{minRows: 5}" maxlength="500" show-word-limit></el-input>
          </el-form-item>
          <el-form-item prop="tagIds">
            <template slot="label">
              文章标签 <span style="font-size: 12px;color: #999999;">添加标签后，您的文章将显示在对应标签分区中，方便用户进行检索；标签不分先后，最多可添加5个标签</span>
            </template>
            <div class="article-tag">
              <el-tag :key="index" v-for="(tag,index) in confirmTags" closable disable-transitions @close="handleCloseDia(tag,'confirmTags')">
                {{tag.tagName}}
              </el-tag>
              <div class="add-tag">
                <span @click="addLabel"><i class="el-icon-circle-plus-outline"></i>添加标签（{{confirmTags.length}}/5）</span>
              </div>
            </div>
          </el-form-item>
          <el-form-item label="编辑正文" prop="content">
            <Editor v-model="ruleForm.content" />
          </el-form-item>
        </el-form>
      </div>
    </div>
    <div class="footer-release">
      <el-button @click="previewArticle('ruleForm')">预览</el-button>
      <el-button @click="saveOrUpdateDraftArticle('ruleForm')">存草稿</el-button>
      <el-button type="danger" @click="saveOrUpdateArticle('ruleForm')">发布</el-button>
    </div>
    <!-- 添加标签的弹框 -->
    <el-dialog title="添加标签" :visible.sync="TagDialogVisible" width="785px" class="label-dialog">
      <div class="dialog-content">
        <div class="have-chosen">
          <p class="dialog-title">
            <span></span>
            <span>已选标签</span>
            <span>{{diaDynamicTags.length}}/5</span>
          </p>
          <div class="label-list">
            <el-tag :key="index" v-for="(item,index) in diaDynamicTags" closable disable-transitions @close="handleCloseDia(item,'diaDynamicTags')">
              {{item.tagName}}
            </el-tag>
          </div>
        </div>
        <div class="all-label">
          <p class="dialog-title">
            <span></span>
            <span>全部标签</span>
            <span>最多可选择5个标签</span>
          </p>
          <div class="label-box">
            <ul class="left-frist">
              <li v-for="(item,index) in firstTag" :key="index" :class="{'active-style': activeTag===item}" @click="selFirstTag(item, index)">
                <span class="red-label"></span>
                <span class="frist-name">
                  {{item.tagName}}
                  <span class="frist-name-have" v-if="computedNum(item.id)>0">{{computedNum(item.id)}}</span>
                </span>
              </li>
            </ul>
            <ul class="right-second" v-if="secondTag.length">
              <li v-for="(item,index) in secondTag" :key="index" :class="{'checked-style': computedActive(item.id)}" @click="changeSecond(item)">
                {{item.tagName}}
              </li>
            </ul>
          </div>
        </div>
      </div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="TagDialogVisible = false">取 消</el-button>
        <el-button type="primary" @click="sureLabel">确 定</el-button>
      </span>
    </el-dialog>
    <el-dialog title="文章预览" :visible.sync="articleDialogVisible" width="785px" class="label-dialog">
      <div class="dialog-content">
        <div class="clearfix user-info">
          <img class="fl" :src="userInfo.avatar" alt="" width="40px" height="40px">
          <div class="fl">
            <span>{{userInfo.userName}}</span>
            <br>
            <span>1分钟前</span>
          </div>
        </div>
        <div class="preview-article">
          <h5>{{ruleForm.title}}</h5>
          <p>摘要：{{ruleForm.description}}</p>
          <div class="ql-container ql-snow" style="border: none;margin: 15px 0;">
            <p v-html="ruleForm.content" class="ql-editor" style="padding: 0;"></p>
          </div>
        </div>
      </div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="articleDialogVisible = false">继续编辑</el-button>
        <el-button type="primary" @click="saveOrUpdateArticle('ruleForm')">发 布</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
import Editor from '@/components/Editor.vue'
import api from '@/fetch'
import uploadPic from '@/utils/uploadPic'
import 'quill/dist/quill.snow.css'

export default {
  components: {
    Editor,
    uploadPic
  },
  data() {
    return {
      uploadDesc: {
        title: '上传文章题图',
        desc: '可上传jpg/jpeg/png/bmp格式图片，建议分辨率为750x562，最大4M',
        maxsize: 4
      },
      ruleForm: {
        image: '', // 封面图
        content: '', // 文章内容
        title: '', // 文章标题
        description: '', // 文章摘要
        tagIds: '' // 文章标签
      },
      rules: {
        title: [{ required: true, message: '请输入文章名称', trigger: 'blur' }, { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }],
        description: [{ required: true, message: '请填写文章摘要', trigger: 'blur' }, { min: 1, max: 500, message: '长度在 1 到 500 个字符', trigger: 'blur' }],
        tagIds: [{ required: true, message: '请选择文章标签', trigger: 'change' }],
        content: [{ required: true, message: '请编辑文章正文', trigger: 'blur' }]
      },
      TagDialogVisible: false, //选择标签的弹框
      allTags: [],
      activeTag: {},
      secondTag: [],
      diaDynamicTags: [], //弹框内已选的标签
      confirmTags: [], // 确认已选的标签
      articleDialogVisible: false,
      userInfo: JSON.parse(localStorage.userInfo || '{}')
    }
  },
  computed: {
    firstTag() {
      return this.allTags.filter(item => !item.parentId)
    }
  },
  watch: {
    $route: {
      handler: function(val) {
        if (val.name === 'reEditArticle') {
          this.viewArticle(val.params.id)
        } else if (val.name === 'publishArticle') {
          this.ruleForm = { image: '', content: '', title: '', description: '', tagIds: '' }
          this.confirmTags = []
        }
      },
      immediate: true
    }
  },
  methods: {
    // 添加标签
    addLabel() {
      this.TagDialogVisible = true
      this.diaDynamicTags = [...this.confirmTags]
    },
    selFirstTag(firstTag) {
      this.activeTag = firstTag
      this.secondTag = this.allTags.filter(item => item.parentId === firstTag.id)
    },
    computedNum(id) {
      return this.diaDynamicTags.filter(item => item.parentId === id).length
    },
    computedActive(id) {
      return this.diaDynamicTags.find(item => item.id === id)
    },
    // 选择第二级
    changeSecond(its) {
      let tagName = this.activeTag.tagName + '-' + its.tagName
      let newObj = Object.assign({}, its, { tagName })
      let index = this.diaDynamicTags.findIndex(item => item.id == newObj.id)
      if (index !== -1) {
        this.diaDynamicTags.splice(index, 1)
      } else if (this.diaDynamicTags.length < 5) {
        this.diaDynamicTags.push(newObj)
      }
    },
    // 确定标签
    sureLabel() {
      this.confirmTags = [...this.diaDynamicTags]
      this.TagDialogVisible = false
    },
    tagList() {
      api.tagList().then(res => (this.allTags = res.data.records))
    },
    // 删除已选中标签
    handleCloseDia(tag, param) {
      let index = this.$data[param].findIndex(item => item.id == tag.id)
      if (index !== -1) this.$data[param].splice(index, 1)
    },
    // 预览
    previewArticle(formName) {
      if (!this.ruleForm.image) return this.$message.warning('请上传文章题图')
      this.ruleForm.tagIds = this.confirmTags.map(item => item.id).join(',')
      this.$refs[formName].validate(valid => {
        if (valid) {
          this.articleDialogVisible = true
        } else {
          return false
        }
      })
    },
    // 发布
    saveOrUpdateArticle(formName) {
      if (!this.ruleForm.image) return this.$message.warning('请上传文章题图')
      this.ruleForm.tagIds = this.confirmTags.map(item => item.id).join(',')
      this.$refs[formName].validate(valid => {
        if (valid) {
          api.saveOrUpdateArticle(this.ruleForm).then(res => {
            this.$router.push('/article/list')
            this.$message.success('发布成功')
          })
        } else {
          return false
        }
      })
    },
    // 存草稿
    saveOrUpdateDraftArticle(formName) {
      if (!this.ruleForm.image) return this.$message.warning('请上传文章题图')
      this.ruleForm.tagIds = this.confirmTags.map(item => item.id).join(',')
      this.$refs[formName].validate(valid => {
        if (valid) {
          api.saveOrUpdateDraftArticle(this.ruleForm).then(res => {
            this.$router.push('/myHome/draftArt')
            this.$message.success('保存成功')
          })
        } else {
          return false
        }
      })
    },
    resetForm(formName) {
      this.$refs[formName].resetFields()
    },
    // 获取文章详情，重新编辑
    viewArticle(id) {
      api.viewArticle(id).then(res => {
        let { id, image, content, title, description, articleTagList } = res.data
        this.ruleForm = { id, image, content, title, description }
        this.confirmTags = articleTagList
          .map(item => {
            return item.children.map(its => {
              its.tagName = item.tagName + '-' + its.tagName
              return its
            })
          })
          .flat()
      })
    }
  },
  created() {
    if (!window.localStorage.userInfo) return this.$router.push('/login')
    this.tagList()
  }
}
</script>

<style lang="less" scoped>
.container {
  border-radius: 10px;
  margin: 21px auto 29px;
  min-height: 910px;
  background-color: #fff;
  > h4 {
    font-size: 16px;
    height: 50px;
    line-height: 50px;
    border-bottom: 1px solid #dddddd;
    padding-left: 20px;
    font-weight: normal;
  }
  .content-area {
    .left-content {
      width: 320px;
      height: 100%;
      padding: 20px;
      box-sizing: border-box;
    }
    .right-content {
      border-left: 1px solid #dddddd;
      width: 780px;
      height: 100%;
      padding: 10px 20px;
      box-sizing: border-box;
      .article-tag {
        .el-tag {
          margin-right: 10px;
        }
        .add-tag {
          color: #e23732;
          > span {
            cursor: pointer;
            > i {
              margin-right: 5px;
            }
          }
        }
      }
    }
  }
  .footer-release {
    text-align: center;
    line-height: 50px;
    border-top: 1px solid #dddddd;
    .el-button {
      width: 90px;
    }
  }
}
.label-dialog {
  /deep/.el-dialog__header {
    padding: 22px 0 12px 20px;
    border: 1px solid #dddddd;
    .el-dialog__title {
      line-height: 16px;
      font-size: 16px;
      color: #4a4a4a;
    }
  }
  /deep/.el-dialog__body {
    padding: 0;
  }
  /deep/.el-dialog__footer {
    padding: 9px 0 7px 0;
    text-align: center !important;
    border: 1px solid #ddd;
    .dialog-footer {
      .el-button {
        width: 89px;
      }
    }
  }
  .dialog-content {
    padding: 0 20px;
    padding-top: 10px;
    .dialog-title {
      margin-bottom: 12px;
      span {
        display: inline-block;
        vertical-align: middle;
      }
      span:nth-child(1) {
        width: 4px;
        height: 14px;
        background: #f33535;
        margin-right: 6px;
      }
      span:nth-child(2) {
        height: 14px;
        font-size: 14px;
        font-weight: 400;
        color: rgba(102, 102, 102, 1);
        line-height: 14px;
        margin-right: 10px;
      }
      span:nth-child(3) {
        height: 14px;
        font-size: 14px;
        line-height: 14px;
        font-weight: 400;
        color: rgba(153, 153, 153, 1);
      }
    }
    .label-list {
      margin-bottom: 10px;
    }
    .all-label {
      .label-box {
        width: 740px;
        height: 449px;
        background: rgba(255, 255, 255, 1);
        border: 1px solid rgba(153, 153, 153, 1);
        margin-bottom: 70px;
        .left-frist {
          width: 120px;
          background: #f7f6fb;
          float: left;
          padding-top: 10px;
          height: calc(100% - 10px);
          li {
            height: 40px;
            line-height: 40px;
            text-align: center;
            font-size: 14px;
            color: rgba(102, 102, 102, 1);
            cursor: pointer;
            .red-label {
              width: 4px;
              height: 14px;
              background: #f33535;
              border-radius: 1px;
              margin-top: 13px;
              display: none;
              position: absolute;
            }
            .frist-name {
              position: relative;
              .frist-name-have {
                position: absolute;
                top: -7px;
                padding: 0 7px;
                height: 15px;
                line-height: 15px;
                background: #fd4040;
                border-radius: 7px;
                color: #fff;
              }
            }
          }
          li:hover {
            color: #f33535;
            .red-label {
              display: block;
            }
          }
          .active-style {
            color: #f33535;
            .red-label {
              display: block;
            }
          }
        }
        .right-second {
          float: left;
          display: flex;
          padding: 12px;
          width: 596px;
          flex-wrap: wrap;
          align-content: flex-start;
          justify-content: flex-start;
          li {
            width: 120px;
            text-align: center;
            height: 40px;
            line-height: 40px;
            background: #f3f3f5;
            border-radius: 2px;
            font-size: 14px;
            font-weight: 400;
            color: rgba(51, 51, 51, 1);
            margin-right: 10px;
            cursor: pointer;
            margin-top: 10px;
          }
          li:nth-child(1),
          li:nth-child(2),
          li:nth-child(3),
          li:nth-child(4) {
            margin-top: 0;
          }
          .checked-style {
            color: #f33535;
            background-color: #fbf0f1;
          }
        }
      }
    }
  }
}
.user-info {
  > img {
    border-radius: 50%;
    margin-right: 10px;
  }
  > div {
    margin-top: 5px;
    > span:last-child {
      color: #99999999;
      font-size: 12px;
    }
  }
}
.preview-article {
  > h5 {
    font-size: 18px;
    margin: 10px 0 25px;
  }
}
/deep/ .el-form--label-top .el-form-item__label {
  padding-bottom: 0;
}
/deep/ .el-tag {
  height: 30px;
  line-height: 30px;
  border: none;
  border-radius: 2px;
  background: #f3f3f3;
  color: #333333;
  margin-right: 10px;
  margin-bottom: 10px;
  .el-tag__close {
    color: #e23732;
  }
  .el-tag__close:hover {
    background-color: #e23732;
    color: #fff;
  }
}
</style>

