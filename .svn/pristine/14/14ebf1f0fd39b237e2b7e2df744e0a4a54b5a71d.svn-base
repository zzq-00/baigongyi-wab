<template>
  <div class='container  clearfix'>
    <div class='hotMessage_nav'>
      <el-breadcrumb separator="/">
        <el-breadcrumb-item v-for="(item,index) in hotMessageNav" :key="index" :to="{ path: item.path }">{{item.name}}</el-breadcrumb-item>
      </el-breadcrumb>
    </div>

    <div class='newsHotDetails_main'>
      <h4>{{detailsData.title}}</h4>
      <div class='message'>
        <span>{{detailsData.sourceName}}</span>
        <p>
          <span>
            <i class="el-icon-time"></i>{{detailsData.publishTime | formatDate}}</span>
          <span>
            <i class="el-icon-view"></i>{{detailsData.watchCount}}</span>
        </p>
      </div>
      <div class='zhaiyao'>摘要：{{detailsData.roundup}}</div>
      <div class='content' v-html='detailsData.content'></div>
      <div class='newsHotDetails_label'>
        <p>
          本站系本网编辑转载，转载目的在于传递更多信息，并不代表本网赞同其观点和对其真实性负责。如涉及作品内容、版权和其它问题，请及时与本网联系，我们将根据著作权人的要求，立即更正或者删除有关内容。 【声明】本站文章版权归原作者所有内容为作者个人观点 本站只提供参考并不构成任何投资及应用建议。本站拥有对此声明的最终解释权。
        </p>
      </div>
      <div class='newsHotDetails_comment' id="comment">
        <p>评论({{commentData.total}})</p>
        <div class='add_comment'>
          <div>
            <img v-if='$store.state.userInfo.accountId' :src="$store.state.userInfo.avatar?$store.state.imageDomain + $store.state.userInfo.avatar : require('@/assets/images/err-header-icon01.png')" alt="">
            <el-input type="textarea" :rows="2" placeholder="请输入内容" v-model.trim="page.comment">
            </el-input>
          </div>
          <p>
            <button @click='commentFn()'>评论</button>
          </p>
        </div>
        <ul>
          <li v-for='(item,index) in commentData.records' :key='index' v-if='commentData.length!=0'>
            <dl>
              <dt>
                <img @click="openUserCenter(item.accountId)" :src="item.avatar?$store.state.imageDomain + item.avatar : require('@/assets/images/err-header-icon01.png')" alt="">
              </dt>
              <dd>
                <div>
                  <p @click="openUserCenter(item.accountId)" style="cursor: pointer;">{{item.nickName}}</p>
                  <p>
                    <!-- | commentDate  -->
                    <em>{{item.commentsTime | commentDate}}</em>
                  </p>
                </div>
                <p style="width: 100%;word-break: break-all;" v-html="strReplace(item.comment)"></p>
              </dd>
            </dl>
          </li>
          <li style="height:100px" v-if='commentData.length==0'>
            <div>
              <p style='text-align:center; padding-top:30px; color:#333;'>暂无评论</p>
            </div>
          </li>
        </ul>
        <div class="pagination" v-if='commentData.total>=21'>
          <el-pagination hide-on-single-page @current-change="handleCurrentChange" :current-page.sync="commentData.current " :page-size.sync="commentData.size" layout="prev,slot, next, total" :total="commentData.total">
            <slot>
              <span>第
                <i>{{commentData.current}}/{{commentData.pages}}</i>页</span>
            </slot>
          </el-pagination>
        </div>
      </div>
    </div>
    <operateIcon :propData='detailsData' :objType='7' :weixinShareLink='link()' :shoucang='true' @gotoComment='gotoComment' />
  </div>
</template>
<script>
import api from '@/fetch'
import operateIcon from '@/components/operateIcon'
export default {
  components: {
    operateIcon
  },
  data() {
    return {
      textarea: '',
      queryId: '',
      detailsData: {},
      commentData: [],
      fenxData: {
        id: '',
        num: '',
        path: this.$route.fullPath,
        likeCount: 0
      },
      page: {
        comment: '',
        objId: '',
        objType: 7
      },
      params: {
        pageNum: 1,
        pageSize: 20,
        paramObject: {
          objId: '',
          objType: 7
        }
      },
      hotMessageNav: [
        {
          name: '热点资讯',
          path: '/hotmessage'
        },
        {
          name: '新闻热点'
        }
      ]
    }
  },
  mounted() {
    this.queryId = this.$route.params.id
    this.page.objId = this.$route.params.id
    this.$store.commit('getHotmessageData', this.fenxData)
    if (this.$route.query.currentIndex == 0) {
      this.hotMessageNav[1].name = '新闻热点'
    } else if (this.$route.query.currentIndex == 1) {
      this.hotMessageNav[1].name = '建筑前沿'
    } else {
      this.hotMessageNav[1].name = '资质热点'
    }
    api
      .browseRecord({
        objId: this.queryId,
        objType: 7
      })
      .then(res => {})
    this.getDetailsDataFn()
    this.getCommentList()
  },
  methods: {
    strReplace(str) {
      return str.replace(/\n/g, '<br/>')
    },
    gotoComment() {
      window.scrollTo(0, document.getElementById('comment').offsetTop)
    },
    getDetailsDataFn() {
      api.hotNewsId(this.queryId).then(res => {
        this.detailsData = res.data
        this.fenxData.likeCount = this.detailsData.likeCount
        this.detailsData.whetherLike = res.data.wasLike
        this.fenxData.id = this.detailsData.id
      })
    },
    //评论
    async commentFn() {
      if (this.page.comment) {
        await api.addComment(this.page)
        this.$message({
          message: '评论成功',
          type: 'success'
        })
        this.page.comment = ''
        this.getCommentList()
        this.getDetailsDataFn()
      } else {
        this.$message('请先输入评论内容！')
      }
    },
    // 翻页
    handleCurrentChange(val) {
      this.params.pageNum = val
      this.getCommentList()
    },
    getCommentList() {
      this.params.paramObject.objId = this.queryId
      api.getCommentList(this.params).then(res => {
        if (res.code == 200) {
          this.commentData = res.data
          this.fenxData.num = this.commentData.length
        }
      })
    },
    link() {
      return location.origin + '/share/hotNews?id=' + this.$route.params.id
    }
  }
}
</script>
<style lang="less" scoped>
.container {
  position: relative;
  h4 {
    font-size: 18px;
    color: #4a4a4a;
    font-weight: 600;
    text-align: center;
    padding-top: 30px;
    padding-bottom: 20px;
    background: #fff;
  }
  .zhaiyao {
    padding-top: 10px;
    color: #333333;
  }
}

.hotMessage_nav {
  height: 40px;
  line-height: 40px;
  /deep/ .el-breadcrumb {
    height: 40px;
    line-height: 40px;
  }
  /deep/ .el-breadcrumb__inner {
    color: #4a4a4a;
    font-weight: 500;
    &:hover {
      color: #e23732;
    }
  }
}

.newsHotDetails_main {
  padding-left: 230px;
  padding-right: 230px;
  padding-bottom: 20px;
  overflow-y: scroll;
  background: #fff;
  flex: 1;
  .message {
    display: flex;
    justify-content: space-between;
    > span {
      color: #999999;
    }
    > p {
      span {
        color: #999999;
        i {
          color: #999999;
          padding-right: 6px;
        }
        &:nth-child(2) {
          padding-left: 12px;
        }
      }
    }
  }
  .content {
    padding-top: 12px;
  }
}
.newsHotDetails_main::-webkit-scrollbar {
  display: none;
  overflow: hidden;
}
.newsHotDetails_label {
  padding: 22px;
  margin-top: 20px;
  background: #eee;
  width: 598px;
  > p {
    color: #333333;
    line-height: 20px;
  }
}

.newsHotDetails_comment {
  padding-top: 30px;
  width: 100%;
  > p {
    padding-bottom: 10px;
    border-bottom: 1px solid #dddddd;
  }
  > .add_comment {
    padding-top: 20px;
    > div {
      display: flex;
      img {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 10px;
      }
      /deep/ .el-textarea__inner {
        height: 120px;
        border: 1px solid #ddd;
        border-radius: 10px;
      }
    }
    p {
      padding-top: 10px;
      display: flex;
      justify-content: flex-end;
      button {
        background: #fff;
        width: 90px;
        height: 34px;
        border: 1px solid #dddddd;
        border-radius: 5px;
        color: #4a4a4a;
        &:hover {
          cursor: pointer;
        }
      }
    }
  }
  > ul {
    padding-top: 20px;
    padding-bottom: 20px;
    > li {
      border-top: 1px solid #dddddd;
      dl {
        display: flex;
        padding-top: 10px;
        padding-bottom: 20px;
        dt {
          img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #ccc;
          }
        }
        dd {
          padding-left: 10px;
          flex: 1;
          > div {
            padding-top: 10px;
            display: flex;
            justify-content: space-between;
            p {
              color: #4a4a4a;
              em {
                color: #999999;
                font-style: normal;
                &:nth-child(2) {
                  padding-left: 8px;
                }
              }
            }
          }
          > p {
            padding-top: 12px;
            color: #666666;
          }
        }
      }
    }
  }
}
</style>
<style lang="less">
.content {
  > p {
    width: 100%;
    height: 100%;
    color: rgba(74, 74, 74, 1);
    font-size: 14px;
    line-height: 25px;
    > img {
      display: block;
      width: 100% !important;
      height: 100% !important;
      padding-bottom: 10px;
    }
  }
}

.pagination {
  text-align: center;
  margin-bottom: 20px;
  .el-pagination .btn-next,
  .el-pagination .btn-prev {
    width: 40px;
    height: 40px;
    padding-right: auto;
    .el-icon-arrow-left:before,
    .el-icon-arrow-right:before {
      font-size: 20px;
    }
  }
  .el-pagination {
    slot {
      span {
        font-size: 20px;
        margin: 6px 20px 0;
        color: #999;
        font-weight: normal;
      }
    }
    .el-pagination__total {
      margin: 6px 0 0 20px;
      font-size: 20px;
      color: #999;
      font-weight: normal;
    }
  }
}
em,
i,
s {
  font-style: normal;
  text-decoration: none;
}
</style>


