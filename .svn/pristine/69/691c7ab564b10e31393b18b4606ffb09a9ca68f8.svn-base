<template>
  <div class="courseRoom">
    <div class="content">
      <div class="tabChange clearfix">
        <span v-for="(item,index) in tabsColumn" :key="index" @click="toggleTabs(index)"
            :class="{active:index==nowIndex}">{{item}}
        </span>
      </div>

      <course-list :dataList=dataList @getCurrentPage="getCurrentPage" @courseDetail="courseDetail" v-show="nowIndex===0"></course-list>
      <column-list :dataList=dataList @getCurrentPage="getCurrentPage" @columnDetail="columnDetail" v-show="nowIndex===1"></column-list>
    </div>
  </div>
</template>

<script>
import CourseList from '@/components/courseList'
import ColumnList from '@/components/columnList'
import store from '@/store'
import api from '@/fetch'
export default {
  name: 'LectureRoom',
  components: {
    // classesColumn
    CourseList,
    ColumnList
  },
  data () {
    return {
      nowIndex: 0, // tab栏切换
      tabsColumn: ['课堂', '专栏'],
      // 课程参数
      courseParams: {
        asc: true,
        orderBy: 'id',
        pageNum: 1,
        pageSize: 8
      },
      // 专栏参数
      columnParams: {
        asc: true,
        orderBy: 'id',
        pageNum: 1,
        pageSize: 8,
        paramObject: {}
      },
      // 列表数据
      dataList: {
        course: {},
        column: {}
      }
    }
  },
  created () {
    this.getCourse()
    this.$watch('nowIndex', (newVal, oldVal) => {
      if (this.nowIndex === 0) {
        this.getCourse()
      } else {
        this.getColumn()
      }
    })
  },
  watch: {
    courseParams: {
      handler: 'getCourse',
      deep: true
    },
    columnParams: {
      handler: 'getColumn',
      deep: true
    }
  },
  methods: {
    // tab栏切换
    toggleTabs (index) {
      this.nowIndex = index
    },
    // 课程
    async getCourse () {
      const res = await api.getCourse(this.courseParams)
      this.dataList.course = res.data
    },
    // 专栏
    async getColumn () {
      const res = await api.getColumn(this.columnParams)
      this.dataList.column = res.data
    },
    // 翻页
    getCurrentPage (currentPage) {
      console.log(currentPage)
      if (this.nowIndex === 0) {
        this.courseParams.pageNum = currentPage
      } else {
        this.columnParams.pageNum = currentPage
      }
    },
    // 跳转到---课程详情页--讲堂
    courseDetail (courseItem) {
      if (courseItem.price === 0) {
        this.$router.push(`/freecourseDetail/${courseItem.id}`)
      } else {
        if (store.state.user) {
          if (courseItem.purchaseStatus) {
            this.$router.push(`/myBuy/courseDetail/${courseItem.id}`)
          } else {
            this.$router.push(`/paycourseDetail/${courseItem.id}`)
          }
        } else {
          this.$router.push(`/paycourseDetail/${courseItem.id}`)
        }
      }
    },
    // 跳转到---专栏详情页--讲堂
    columnDetail (columnItem) {
      if (columnItem.price === 0) {
        this.$router.push(`/freecolumnDetail/${columnItem.id}`)
      } else {
        if (store.state.user) {
          if (columnItem.purchaseStatus) {
            this.$router.push(`/myBuy/columnDetail/${columnItem.id}`)
          } else {
            this.$router.push(`/paycolumnDetail/${columnItem.id}`)
          }
        } else {
          this.$router.push(`/paycolumnDetail/${columnItem.id}`)
        }
      }
    }
  }
}
</script>

<style lang="less" scope>
  .courseRoom {
      width: 1100px;
      overflow: hidden;
      li:nth-child(4n){
      margin-right:0;
    }
    .tabChange {
      font-size: 16px;
      margin: 20px 20px 26px 0;
      span:first-child {
        margin-right: 20px;
      }
      .active{
        position: relative;
        color: #e43c31;
      }
      .active::after{
        content: "";
        display: inline-block;
        position: absolute;
        bottom:-10px;
        left: 5px;
        height: 3px;
        width:24px;
        background-color: #e43c31;
      }
    }
  }
</style>
