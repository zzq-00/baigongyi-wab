<template>
  <div>
    <!-- 图片上传组件辅助-->
    <input type="file" multiple ref="file-input" accept="image/*" @change="uploadFile($event, 'forEditor')" v-show="false">

    <quill-editor v-loading="imgUploading" class="editor" v-model="content" ref="myQuillEditor" :options="editorOption" @blur="onEditorBlur($event)" @focus="onEditorFocus($event)" @change="onEditorChange($event)">
    </quill-editor>
  </div>
</template>
<script>
// 工具栏配置
const toolbarOptions = [
  ['bold', 'italic', 'underline', 'strike'], // 加粗 斜体 下划线 删除线
  // ['blockquote', 'code-block'], // 引用  代码块
  ['blockquote'], // 引用
  [{ header: 1 }, { header: 2 }], // 1、2 级标题
  [{ list: 'ordered' }, { list: 'bullet' }], // 有序、无序列表
  [{ script: 'sub' }, { script: 'super' }], // 上标/下标
  [{ indent: '-1' }, { indent: '+1' }], // 缩进
  // [{'direction': 'rtl'}],                         // 文本方向
  // [{ size: ['small', false, 'large', 'huge'] }], // 字体大小
  // [{ header: [1, 2, 3, 4, 5, 6, false] }], // 标题
  // [{ color: [] }, { background: [] }], // 字体颜色、字体背景颜色
  // [{ font: [] }], // 字体种类
  [{ align: [] }], // 对齐方式
  ['clean'], // 清除文本格式
  ['link', 'image', 'video'] // 链接、图片、视频
]

import { quillEditor } from 'vue-quill-editor'
import 'quill/dist/quill.core.css'
import 'quill/dist/quill.snow.css'
import 'quill/dist/quill.bubble.css'
import uploadImg from '@/mixins/uploadImg.js'

export default {
  props: {
    /*编辑器的内容*/
    value: {
      type: String
    },
    description: {
      type: Object,
      default: function() {
        return { maxsize: 4 }
      }
    }
  },
  components: {
    quillEditor
  },
  watch: {
    value: function(val) {
      this.content = val
    },
    imageUrl: function(val) {
      this.insertToEditor(val)
    }
  },
  mixins: [uploadImg],
  data() {
    const _this = this
    return {
      content: '',
      imgUploading: false, // 根据图片上传状态来确定是否显示loading动画，刚开始是false,不显示
      editorOption: {
        placeholder: '',
        theme: 'snow', // or 'bubble'
        placeholder: '输入文本',
        modules: {
          toolbar: {
            container: toolbarOptions,
            // container: "#toolbar",
            handlers: {
              image: function(value) {
                if (value) {
                  _this.$refs['file-input'].click()
                } else {
                  this.quill.format('image', false)
                }
              }
            }
          }
        }
      },
      imageUrl: ''
    }
  },
  methods: {
    onEditorBlur() {
      //失去焦点事件
    },
    onEditorFocus() {
      //获得焦点事件
    },
    onEditorChange() {
      //内容改变事件
    },
    insertToEditor(val) {
      // 获取富文本组件实例
      let quill = this.$refs.myQuillEditor.quill
      // 获取光标所在位置
      let length = quill.getSelection().index
      // 插入图片
      quill.insertEmbed(length, 'image', val)
      // 调整光标到最后
      quill.setSelection(length + 1)
      // 获得焦点
      quill.focus()
    },
    handleHtml(val) {
      if (!val.length) return ''
      // 防止只输入空格
      let strReplace = val.replace(/<[^<>]+>/g, '').trim()
      if (!strReplace.length) return ''
      if(val.indexOf('quill.snow.css') > -1) {
        return val
      }
      // quill.snow.css放在阿里云oss上
      let cssLink = "<link href='"+ this.$store.state.imageDomain +"stylesheets/quill.snow.css' rel='stylesheet'>"
      return cssLink + "<div class='ql-container ql-snow'><div class='ql-editor'>"+ val +"</div></div>"
    },
    getContent() {
      let u = navigator.userAgent;
      let _content = this.handleHtml(this.content)
      let result = {
          content: _content
      }
      if(u.indexOf('Android') > -1 || u.indexOf('Linux') > -1){
          return result
      } else if(u.indexOf('iPhone') > -1){
          return _content
      }
    },
    setContent(obj) {
      // 富文本内容回填
      this.content = obj.content || ""
    }
  },
  mounted() {
    document.body.style.minWidth = '100%'
    document.body.style.backgroundColor = '#fff'
    window.getContent = this.getContent
    window.setContent = this.setContent
    this.$refs.myQuillEditor.quill.format('align', 'justify')
  }
}
</script>

<style lang="less" scoped>
/deep/ .ql-toolbar {
  width: 100%;
  border: 0;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 99;
  background-color: #fff;
}
/deep/ .ql-container {
  border: none;
  margin-top: 64px;
}
/deep/ .ql-editor {
  -webkit-tap-highlight-color: transparent;
  outline: none;
  min-height: 300px;
  img{
    display: block;
  }
}
/deep/ .editor {
  line-height: normal !important;
}
/deep/ .ql-snow .ql-tooltip[data-mode='link']::before {
  content: '请输入链接地址:';
}
/deep/ .ql-snow .ql-tooltip.ql-editing a.ql-action::after {
  border-right: 0px;
  content: '保存';
  padding-right: 0px;
}

/deep/ .ql-snow .ql-tooltip[data-mode='video']::before {
  content: '请输入视频地址:';
}

/deep/ .ql-snow .ql-picker.ql-size .ql-picker-label::before,
/deep/ .ql-snow .ql-picker.ql-size .ql-picker-item::before {
  content: '14px';
}
/deep/ .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='small']::before,
/deep/ .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='small']::before {
  content: '10px';
}
/deep/ .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='large']::before,
/deep/ .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='large']::before {
  content: '18px';
}
/deep/ .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='huge']::before,
/deep/ .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='huge']::before {
  content: '32px';
}

/deep/ .ql-snow .ql-picker.ql-header .ql-picker-label::before,
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-item::before {
  content: '文本';
}
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-label[data-value='1']::before,
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-item[data-value='1']::before {
  content: '标题1';
}
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-label[data-value='2']::before,
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-item[data-value='2']::before {
  content: '标题2';
}
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-label[data-value='3']::before,
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-item[data-value='3']::before {
  content: '标题3';
}
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-label[data-value='4']::before,
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-item[data-value='4']::before {
  content: '标题4';
}
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-label[data-value='5']::before,
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-item[data-value='5']::before {
  content: '标题5';
}
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-label[data-value='6']::before,
/deep/ .ql-snow .ql-picker.ql-header .ql-picker-item[data-value='6']::before {
  content: '标题6';
}

/deep/ .ql-snow .ql-picker.ql-font .ql-picker-label::before,
/deep/ .ql-snow .ql-picker.ql-font .ql-picker-item::before {
  content: '标准字体';
}
/deep/ .ql-snow .ql-picker.ql-font .ql-picker-label[data-value='serif']::before,
/deep/ .ql-snow .ql-picker.ql-font .ql-picker-item[data-value='serif']::before {
  content: '衬线字体';
}
/deep/ .ql-snow .ql-picker.ql-font .ql-picker-label[data-value='monospace']::before,
/deep/ .ql-snow .ql-picker.ql-font .ql-picker-item[data-value='monospace']::before {
  content: '等宽字体';
}
</style>
