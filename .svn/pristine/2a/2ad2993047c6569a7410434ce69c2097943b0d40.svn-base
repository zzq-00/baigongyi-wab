<template>
  <div class="qa-list-page">
    <div class="qa-list-left">
      <p class="qa-list-title">热门回答</p>
      <ul class="qa-list-box" v-if="!noData" v-loading="answerLoading" element-loading-text="正在加载" infinite-scroll-disabled='loadStatus' v-infinite-scroll="qaload" infinite-scroll-immediate='false' infinite-scroll-distance='67'>
        <li v-for="(item,index) in qaList" :key="index">
          <p class="qa-box-title" @click="gotoDetails(item,'questions')">{{item.title}}</p>
          <div class="qa-person-info" v-if="item.answerCount!=0">
            <img :src="item.avatar?$store.state.imageDomain + item.avatar : require('@/assets/images/err-header-icon01.png')" alt="" @click="gotoUser(item.answerAccountId)">
            <div>
              <p @click="gotoUser(item.answerAccountId)" class="answer-name">{{item.nickName}}</p>
              <p class="answer-time">{{item.lastAnswerTime}}</p>
            </div>
            <button class="already" v-if="item.concernStatus==1&&loginaccountId!=item.answerAccountId" @click="follow('1',item,index)">已关注</button>
            <button class="not" v-if="item.concernStatus==2&&loginaccountId!=item.answerAccountId" @click="follow('2',item,index)">关注</button>
            <button class="already" v-if="item.concernStatus==3&&loginaccountId!=item.answerAccountId" @click="follow('3',item,index)">互相关注</button>
          </div>
          <div class="qa-content" @click="gotoDetails(item,'qa')" v-if="item.answerCount!=0">{{item.stripHtmlContent}}</div>
          <p class="tagging" v-if="item.answerCount!=0">
            <span>{{item.likeCount}}个赞</span>
            <span>·</span>
            <span>{{item.commentCount}}条评论</span>
          </p>
          <p class="no-answer" v-if="item.answerCount==0">暂无回答...</p>
        </li>
        <!-- <p class="tips">{{newloadText}}</p> -->
      </ul>
      <div class="no-content" v-if="noData">
        <img src="@/assets/images/No-other.png" alt="">
        <p>暂无问答</p>
      </div>
    </div>
    <div class="right-content fr">
      <recommendColumn />
      <recommendCourse />
    </div>
  </div>
</template>

<script>
import api from '@/fetch'
import recommendColumn from '@/components/recommendColumn'
import recommendCourse from '@/components/recommendCourse'
export default {
  name: 'questions',
  components: {
    recommendColumn,
    recommendCourse
  },
  data() {
    return {
      qaParams: {
        pageNum: 1,
        pageSize: 10
      },
      answerLoading: true,
      loadStatus: false,
      qaList: [], //问答列表
      loginaccountId: '', //登录人id
      attentionParams: {
        objId: this.$route.params.id,
        objType: 6
      },
      noData:false,   //无数据图
      // newloadText: ''
    }
  },
  watch: {},
  computed: {},
  // activated() {},
  // //在页面离开时记录滚动位置
  // beforeRouteLeave(to, from, next) {
  //   // window.localStorage.scrollTop =  document.getElementsByClassName('qa-list-box')[0].scrollTop
  //   localStorage.setItem('scrollTop',document.getElementsByClassName('qa-list-box')[0].scrollTop)
  //   next()
  // },

  // //进入该页面时，用之前保存的滚动位置赋值
  // beforeRouteEnter(to, from, next) {
  //   next(vm => {
  //      document.getElementsByClassName('qa-list-box')[0].offset().top = localStorage.getItem('scrollTop')
  //      console.log(window.localStorage.scrollTop,'window.localStorage.scrollTop')
  //      console.log(document.getElementsByClassName('qa-list-box')[0].style.offset().top,'qqqqqqqqqqqqqq')
  //   })
  // },
  methods: {
    // 数据瀑布流
    qaload() {
      this.loadStatus = true
      this.qaParams.pageNum += 1
      this.getQuestionList()
    },
    gotoUser(accountId) {
      window.open(`/myHome/myReply?id=${accountId}`, '_blank')
    },
    gotoDetails(item, val) {
      // qa 点击回答内容进入回答详情  questions 点击问题标题进入问题详情
      let id = ''
      if (val == 'qa') {
        id = item.answerAccountId
      } else {
        id = item.accountId
      }
      let routeUrl
      if (val == 'qa') {
        routeUrl = this.$router.resolve({ path: `/myReplyDetails/${item.answerId}`, query: { id: id } })
      } else {
        routeUrl = this.$router.resolve({ path: `/questionsDetails/${item.id}`, query: { id: id } })
      }
      window.open(routeUrl.href, '_blank')
    },
    getQuestionList() {
      api
        .getQuestionList(this.qaParams)
        .then(res => {
          this.qaList = this.qaList.concat(res.data.records)
          this.qaList.length==0?this.noData = true:this.noData = false
          // if (res.data.records.length == 0) {
          //   this.newloadText = '暂无更多数据'
          // } else {
          //   this.newloadText = ''
          // }
          this.answerLoading = false //加载状态
          this.loadStatus = false
          this.qaList.map(itmem => {
            if (item.stripHtmlContent.length > 150) {
              item.stripHtmlContent = item.stripHtmlContent.substring(0, 150) + '...'
            }
          })
        })
        .catch(res => {})
    },
    // 关注
    follow(val, item, index) {
      // val:1:已关注;2:关注;3:互相关注;
      if (!this.loginaccountId) {
        let routeUrl = this.$router.resolve('/login')
        window.open(routeUrl.href, '_blank')
      } else {
        let objId = item.answerAccountId
        let objType = 6
        if (val == 1 || val == 3) {
          api.delAttention({ objId: objId, objType: objType }).then(res => {
            item.concernStatus = 2
          })
        } else if (val == 2) {
          api.addAttention({ objId: objId, objType: objType }).then(res => {
            item.concernStatus = res.data
          })
        }
      }
    }
  },
  mounted() {
    if (window.localStorage.userInfo) {
      this.loginaccountId = JSON.parse(window.localStorage.getItem('userInfo')).accountId
    }
    this.getQuestionList() //问答列表
  }
}
</script>
<style lang="less" scoped>
.qa-list-page {
  padding: 20px 0;
  overflow: hidden;
  .qa-list-left {
    float: left;
    width: 780px;
    background: #ffffff;
    border-radius: 10px;
    .qa-list-title {
      padding: 22px 0 12px 20px;
      height: 16px;
      line-height: 16px;
      font-size: 16px;
      font-weight: 400;
      color: rgba(74, 74, 74, 1);
      border-bottom: 1px solid #dddddd;
    }
    .qa-list-box {
      min-height: 50px;
      overflow: auto;
      height: calc(100vh - 156px);
      padding-bottom: 71px;
      li {
        padding: 20px;
        border-bottom: 1px solid #dddddd;
        .qa-box-title {
          max-width: 740px;
          overflow: hidden;
          height: 17px;
          line-height: 17px;
          font-size: 16px;
          font-weight: bold;
          color: rgba(51, 51, 51, 1);
          cursor: pointer;
          white-space: nowrap;
          text-overflow: ellipsis;
        }
        .qa-box-title:hover {
          color: #e23732;
        }
        .qa-person-info {
          margin-top: 10px;
          img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
            float: left;
            cursor: pointer;
          }
          div {
            display: inline-block;
            .answer-name {
              height: 12px;
              line-height: 12px;
              font-size: 14px;
              font-weight: 400;
              color: rgba(74, 74, 74, 1);
              margin-top: 4px;
            }
            .answer-name:hover {
              color: #e23732;
              cursor: pointer;
            }
            .answer-time {
              margin-top: 11px;
              height: 9px;
              line-height: 9px;
              font-size: 12px;
              font-weight: 400;
              color: rgba(153, 153, 153, 1);
            }
          }
          button {
            padding: 0 13px;
            float: right;
            height: 34px;
            border-radius: 5px;
            background-color: #ffffff;
            cursor: pointer;
          }
          .not {
            border: 1px solid #e23732;
            color: #e23732;
          }
          .already {
            border: 1px solid #666666;
            color: #666666;
          }
        }
        .qa-content {
          margin-top: 12px;
          font-size: 14px;
          font-weight: 400;
          color: rgba(102, 102, 102, 1);
          line-height: 19px;
          max-height: 55px;
          cursor: pointer;
          overflow: hidden;
        }
        .tagging {
          margin-top: 10px;
          height: 15px;
          line-height: 15px;
          font-size: 14px;
          font-weight: 400;
          color: rgba(153, 153, 153, 1);
          span:nth-child(2) {
            margin: 0 3px;
          }
        }
        .no-answer {
          height: 15px;
          line-height: 15px;
          font-size: 14px;
          font-weight: bold;
          color: rgba(153, 153, 153, 1);
          margin-top: 10px;
        }
      }
      .tips {
        text-align: center;
        padding: 10px 0;
        font-size: 16px;
      }
    }
    .qa-list-box::-webkit-scrollbar {
      display: none;
    }
    .no-content {
      width: 266px;
      margin: 0 auto;
      // min-height: calc(100vh - 215px);
      padding: 20px 0;
      p {
        height: 14px;
        line-height: 14px;
        font-size: 15px;
        color: rgba(188, 188, 196, 1);
        text-align: center;
      }
    }
  }
}
.right-content {
  width: 300px;
  > div + div {
    margin-top: 20px;
  }
}
</style>
