<template>
  <div class="publishArt">
    <div class="title font-12">
      <p class="active">{{isOwn?'我':'他'}}的文章（已发布）</p>
      <div>
        <span style="cursor: pointer;" :class="{'active': params.orderBy==='publish_time'}" @click="sortData('publish_time')">按发布时间排序</span>
        |
        <span style="cursor: pointer;" :class="{'active': params.orderBy==='watch_count'}" @click="sortData('watch_count')">按阅读量排序</span>
      </div>
    </div>
    <div class="content">
      <articleList :isOwn="isOwn" :listData="articleList" :noMore="noMore" :loading="loading" @getMore="getArticlelist" @getNewData='getNewData' />
    </div>
  </div>
</template>

<script>
import articleList from '@/components/articleList'
import api from '@/fetch'

export default {
  name: 'publishArt',
  components: {
    articleList
  },
  data() {
    return {
      params: {
        asc: false,
        orderBy: 'publish_time', // watch_count阅读量排序  publish_time发布时间排序
        pageNum: 1,
        pageSize: 10,
        paramObject: {
          flag: 7
        }
      },
      totalNum: 1,
      articleList: [],
      loading: false
    }
  },
  computed: {
    noMore() {
      return this.articleList.length >= this.totalNum
    },
    isOwn() {
      if (this.$route.query.id) {
        return this.$route.query.id === this.$store.state.userInfo.accountId
      }
      return true
    }
  },
  methods: {
    sortData(orderBy) {
      this.articleList = []
      this.params.orderBy = orderBy
      this.params.pageNum = 1
      this.getArticlelist()
    },
    // 文章列表
    getArticlelist() {
      if (this.$route.query.id) {
        // 他人文章
        this.params.paramObject.accountId = this.$route.query.id
        this.params.paramObject.flag = 9
      }
      this.loading = true
      api.getArticlelist(this.params).then(res => {
        this.loading = false
        this.totalNum = res.data.total
        this.articleList = [...this.articleList, ...res.data.records]
        !this.noMore && this.params.pageNum++
      })
    },
    getNewData(delData) {
      this.loading = true
      let index = this.articleList.findIndex(item => item === delData)
      this.articleList.splice(index, 1)
      if (!this.articleList.length) {
        this.params.pageNum = 1
        this.getArticlelist()
      }
    }
  },
  mounted() {
    this.getArticlelist()
  }
}
</script>

<style lang="less" scoped>
.publishArt {
  .title {
    padding: 10px 20px;
    background-color: #fff3f3;
    display: flex;
    justify-content: space-between;
    .active {
      color: #e23732;
    }
  }
  .content {
    height: calc(100vh - 400px);
    background-color: #fff;
  }
}
.nomore-data {
  text-align: center;
  margin: 5px 0 10px;
  color: #999;
}
</style>
