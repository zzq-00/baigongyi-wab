<template>
  <div class="information">
    <ul class="left-content">
      <li @click="tabChange(item)" :class="{active: activeTab===item.name}" v-for="(item, index) in tabItem" :key="index">
        {{item.name}}{{item.unreadCount>0?'（'+item.unreadCount+'）':''}}
      </li>
    </ul>
    <div class="right-content">
      <div class="information-title">
        <p class="font-16">{{activeTab}}</p>
      </div>
      <el-scrollbar class="scroll-wrap" :key="updateKey">
        <ul class="information-content" v-infinite-scroll="innerMsgList" infinite-scroll-disabled="disabled">
          <li v-for="(item, index) in infoList" :key="index">
            <p>{{item.messageTextDto.messageText}}</p>
            <p class="gray">{{item.createTime | formatDate}}</p>
            <p>
              <span class="red" v-if="item.wasSkip" @click="viewInfo(item)">查看</span>
              <span class="red" @click="delInfo(item)">删除</span>
            </p>
          </li>
        </ul>
        <p v-if="loading" class="nomore-data">加载中...</p>
        <div v-else-if="!infoList.length" class="no-data">
          <img src="@/assets/images/No-other.png" alt="">
          <p>暂无消息</p>
        </div>
        <p v-else-if="noMore" class="nomore-data">没有更多了</p>
      </el-scrollbar>
    </div>
  </div>
</template>

<script>
import api from '@/fetch'
import { mapState } from 'vuex'
export default {
  data() {
    return {
      params: {
        pageNum: 1,
        pageSize: 20
      },
      totalNums: 1,
      infoList: [],
      loading: false,
      updateKey: 1
    }
  },
  computed: {
    ...mapState({
      tabItem: 'informationCount'
    }),
    activeTab: function() {
      return this.$route.query.activeTab || '业务消息'
    },
    disabled() {
      return this.loading || this.noMore
    },
    noMore() {
      return this.infoList.length >= this.totalNums
    }
  },
  methods: {
    tabChange(item) {
      this.totalNums = 1
      this.params.pageNum = 1
      this.infoList = []
      this.$router.replace('/information?activeTab=' + item.name)
      this.updateKey++
    },
    innerMsgList() {
      // 1业务类型 2系统类型
      let type = this.activeTab === '业务消息' ? 1 : 2
      this.loading = true
      api.innerMsgList(type, this.params).then(res => {
        this.loading = false
        this.totalNums = res.data.total
        this.infoList = [...this.infoList, ...res.data.records]
        !this.noMore && this.params.pageNum++
      })
    },
    viewInfo(item) {
      let value = item.messageTextDto.messageText
      switch (true) {
        case value.startsWith('您订阅的专栏'):
        case value.startsWith('您已成功订阅专栏'):
        case value.startsWith('您收藏的专栏'):
          // 专栏简介
          window.open('/columnDetail/' + item.messageTextDto.objId)
          break
        case value.startsWith('您的专栏课程'):
          // 我的专栏-课程管理
          window.open('/courseMessage/' + item.messageTextDto.objId)
          break
        case value.startsWith('您的专栏'):
          // 我的讲堂-专栏
          window.open('/myLecture?activeIndex=1')
          break
        case value.startsWith('您的课程'):
          // 我的讲堂-课程
          window.open('/myLecture?activeIndex=0')
          break
        case value.startsWith('您已成功购买课程'):
          // 课程简介
          window.open('/courseDetail/' + item.messageTextDto.objId)
          break
        case value.startsWith('您关注的问题'):
        case value.startsWith('您的问题'):
          // 问题详情
          window.open('/questionsDetails/' + item.messageTextDto.objId)
          break
        case value.startsWith('您的提现申请'):
          // 提现详情
          window.open('/withdrawDeatils/' + item.messageTextDto.objId)
          break
        case /您收藏的(.+)回答/.test(value):
        case /您对问题(.+)的回答/.test(value):
          // 回答详情
          window.open('/myReplyDetails/' + item.messageTextDto.objId)
          break
        case value.includes('关注了您'):
          // 他的主页
          window.open('/myHome/myReply?id=' + item.messageTextDto.objId)
          break
      }
    },
    // 删除消息
    delInfo(item) {
      this.$confirm('是否删除当前消息?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      })
        .then(() => {
          api.innerMsgDelete(item.id).then(res => {
            let index = this.infoList.findIndex(element => element.id === item.id)
            this.infoList.splice(index, 1)
            this.totalNums -= 1
            this.updateKey++
            if (!this.infoList.length) {
              this.params.pageNum = 1
              this.innerMsgList()
            }
          })
        })
        .catch(() => {})
    }
  }
}
</script>

<style lang="less" scoped>
.scroll-wrap {
  height: calc(100vh - 190px);
  /deep/ .el-scrollbar__wrap {
    overflow-x: hidden;
  }
}
.information {
  display: flex;
  margin-top: 20px;
  min-height: calc(100vh - 160px);
  .left-content {
    width: 140px;
    > li {
      cursor: pointer;
      height: 40px;
      line-height: 40px;
      text-align: center;
      background-color: #fff;
      border-radius: 6px;
      margin-bottom: 6px;
      &.active {
        background-color: #e23732;
        color: #fff;
      }
    }
  }
  .right-content {
    flex: 1;
    overflow: hidden;
    margin-left: 20px;
    border-radius: 10px;
    background-color: #fff;
    .information-title {
      height: 50px;
      padding: 0 20px;
      border-bottom: 1px solid #dddddd;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    .information-content {
      padding-left: 40px;
      > li {
        display: flex;
        padding: 11px 0;
        border-bottom: 1px solid #eeeeee;
        align-items: center;
        padding-right: 10px;
        > p {
          &:first-child {
            flex: 1;
            margin-right: 50px;
            word-break: break-word;
          }
          &:last-child {
            flex: 0 0 140px;
            text-align: right;
            > span {
              margin: 0 10px;
              position: relative;
              & + span {
                &::before {
                  content: '';
                  width: 1px;
                  height: 12px;
                  background-color: #999;
                  position: absolute;
                  top: 50%;
                  left: -10px;
                  transform: translateY(-50%);
                }
              }
            }
          }
        }
      }
    }
  }
}
.no-data {
  text-align: center;
  padding: 20px 0;
  background-color: #fff;
  p {
    height: 14px;
    line-height: 14px;
    font-size: 15px;
    color: rgba(188, 188, 196, 1);
    text-align: center;
  }
}
.nomore-data {
  text-align: center;
  margin: 10px 0;
  color: #999;
}
</style>
