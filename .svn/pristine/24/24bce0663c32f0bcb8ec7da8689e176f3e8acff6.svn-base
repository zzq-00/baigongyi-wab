<template>
  <div>
    <el-upload
      class="upload-demo"
      :file-list="fileList"
      :action="uploadUrl"
      :data="uploadData"
      :before-upload="beforeAvatarUpload"
      :before-remove="beforeRemove"
      :on-success="handleAvatarSuccess"
      :limit="1"
      :on-preview="doLookImg"
      :on-remove="doDeleteImg"
      >
      <el-button size="small" type="danger">上传视频</el-button>
    </el-upload>

    <!-- <el-upload
      style="position: relative;top: 10px;height: 120px;"
      :file-list="fileList"
      class="avatar-uploader"
      :limit="1"
      :action="uploadUrl"
      list-type="picture-card"
      :data="uploadData"
      :on-success="handleAvatarSuccess"
      :on-error="uploadError"
      :before-upload="beforeAvatarUpload"
      :on-preview="doLookImg"
      :on-remove="doDeleteImg"
    >
      <i class="el-icon-plus"></i>
    </el-upload> -->
  </div>
</template>

<script>
import api from '@/fetch'
import { getSystemDate } from '@/assets/js/date.js'
export default {
  data () {
    return {
      fileList: [],
      uploadUrl: 'http://up-z1.qiniu.com',
      uploadData: {
        key: '',
        token: ''
      },
      formAdd: { brandLogo: '' }
    }
  },
  mounted () {
    this.getQiniuToken()
  },
  methods: {
    async getQiniuToken () {
      const res = await api.getUploadToken()
      console.log(res)
      this.uploadData.token = res.data.videoUpToken
    },
    doDeleteImg (file, fileList) {
      console.log('删除成功', file, fileList)
      // let logoAry
      // let key
      // if (this.editState) {
      //   logoAry = this.mainInfo.brandLogo.split('/')
      // } else {
      //   logoAry = this.formAdd.brandLogo.split('/')
      // }
      // key = [logoAry.length - 1]
      // deleteQiniuImg({ key }).then(res => {
      //   if (res.code === '0') {
      //     if (this.editState) {
      //       this.mainInfo.brandLogo = ''
      //     } else {
      //       this.formAdd.brandLogo = ''
      //     }
      //   } else {
      //     this.$message.error(res.msg)
      //   }
      // })
    },
    doLookImg () {
      this.uploadDialogVisible = true
      this.uploadDialogImg = this.editState ? this.mainInfo.brandLogo : this.formAdd.brandLogo
    },
    handleAvatarSuccess (res, file, fileList) {
      // const hash = res.hash
      // const key = res.key
      // console.log(res.key)
      this.$emit('getVideoUrl', res.key)
      // if (this.editState) {
      //   this.mainInfo.brandLogo = qiniuConfig.qiniuPath + '/' + key
      // } else {
      //   this.formAdd.brandLogo = qiniuConfig.qiniuPath + '/' + key
      // }
    },
    beforeAvatarUpload (file) {
      console.log(file)
      const isMP4 = file.type === 'video/mp4'
      const isFLV = file.type === 'video/flv'
      const isMOV = file.type === 'video/mov'
      const isLt2G = file.size < 2147483648
      if (!isFLV && !isMP4 && !isMOV) {
        this.$message.error('上传文件只能是 mp4，flv，mov 格式!')
        return false
      }
      if (!isLt2G) {
        this.$message.error('上传文件大小不能超过 2GB!')
        return false
      }
      // /video/20200302/xxxxxxx.mp4
      this.uploadData.key = `/video/${getSystemDate()}/${file.name}`
    },
    beforeRemove (file, fileList) {
      // return this.$confirm(`确定移除 ${file.name}？`)
      return file.name
    },
    uploadError () {
      this.$message({
        message: '上传出错，请重试！',
        type: 'error',
        center: true
      })
    }
  }
}
</script>
