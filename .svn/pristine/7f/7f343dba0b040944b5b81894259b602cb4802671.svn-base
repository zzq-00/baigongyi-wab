<!--专栏列表-->
<template>
  <div class="column">
    <!-- 专栏列表 -->
    <ul class="classList">
      <li class="line" v-for="item in dataList.column.records" :key="item.accountId" @click.stop="$emit('columnDetail', item)">
        <div class="classPic"><img :src="$store.state.imageDomain + item.image" alt=""></div>
        <div class="classInfo">
          <span class="font-14">{{strReplace(item.name)}}</span>
          <div class="price">
            <i :class="item.price >0 ? 'red' : 'purple'">{{item.price>0 ? '￥'+item.price : '免费' }}</i>
            <div class="tag">
              <span class="font-12 update">
                {{item.upToTime}}{{item.upToTime=='已完结'?'':'更新'}}
              </span>
              <template v-if="currentPath ==='/myLecture'">
                <el-tag v-if="item.status===2000 || item.status===2001" type="primary" plain size="mini">草稿</el-tag>
                <el-tag v-if="item.status===1002" type="success" plain size="mini">已发布</el-tag>
                <el-tag v-if="item.status===1000" type="warning" plain size="mini">待审核 </el-tag>
                <el-tag v-if="item.status===1001" type="danger" plain size="mini">审核驳回</el-tag>
              </template>
            </div>
          </div>
        </div>
        <div class="otherInfo">
          <div class="photoInfo" v-if="currentPath!=='/myLecture'">
            <img @click.stop="openTeacherHome(item.lecturerInfo.accountId)" :src="item.lecturerInfo.avatar?$store.state.imageDomain + item.lecturerInfo.avatar : require('@/assets/images/err-header-icon01.png')" class="photo">
            <div @click.stop="openTeacherHome(item.lecturerInfo.accountId)" class="name font-12">{{item.lecturerInfo.realName}}</div>
          </div>
          <div class="time">{{item.courseAddTime | formatDate}}</div>
          <div v-show="currentPath==='/myLecture'" class="font-12 handle">
            <template v-if="item.status===2000 || item.status===1001">
              <span style="margin-right:3px" @click.stop="$router.push('/editColumn/'+item.id)">编辑</span>
              <span @click.stop="onDelete(item.id)">删除</span>
            </template>
            <template v-if="item.status===1002">
              <span @click.stop="downColumn(item.id)">下架</span>
              <span @click.stop="goCourseMessage(item.id)">课程管理</span>
            </template>
          </div>
        </div>
      </li>
    </ul>
    <div class="no-data-style" v-if="dataList.column.total==0">
      <img src="@/assets/images/No-column.png" alt="">
      <p>暂无专栏</p>
    </div>
    <!-- 专栏分页 -->
    <div class="pagination">
      <el-pagination hide-on-single-page @current-change="handleCurrentChange" :current-page.sync="dataList.column.current" :page-size.sync="dataList.column.size" layout="prev, slot, next, total" :total="dataList.column.total">
        <slot>
          <span>
            第<i>{{dataList.column.current}}/{{dataList.column.pages}}</i>页
          </span>
        </slot>
      </el-pagination>
    </div>

  </div>
</template>

<script>
import api from '@/fetch'
export default {
  // 专栏状态码：
  // 草稿 2000
  // 已下架 2001
  // 已发布（即审核通过） 1002
  // 审核中 1000
  // 审核驳回 1001
  // 审核通过 1002
  name: 'ColumnList',
  props: {
    dataList: Object
  },
  data() {
    return {
      dialogVisible: false, // 创建专栏弹框
      currentPath: this.$route.path
    }
  },
  methods: {
    strReplace(str) {
      if (str.length > 26) {
        return str.slice(1, 26) + '...'
      } else {
        return str
      }
    },
    // 翻页
    handleCurrentChange(val) {
      this.$emit('getCurrentPage', val)
    },
    // 下架专栏
    downColumn(id) {
      this.$emit('downColumn', id)
    },
    // 课程管理
    goCourseMessage(id) {
      window.open('/courseMessage/' + id)
    },
    // 删除
    onDelete(id) {
      this.$emit('onDelete', id)
    }
  }
}
</script>

<style lang="less" scoped>
.column {
  .classList {
    overflow: hidden;
    display: flex;
    flex-wrap: wrap;
    width: calc(100% + 20px);
    .line {
      cursor: pointer;
    }
    .line::after {
      content: '';
      display: block;
      height: 1px;
      width: 100%;
      position: absolute;
      bottom: 48px;
      left: 0;
      background-color: #f4f4f4;
    }
    li {
      width: 260px;
      height: 346px;
      border-radius: 10px;
      background-color: #fff;
      margin-right: 20px;
      margin-bottom: 20px;
      position: relative;
      border: 1px solid #f4f4f4;
      box-sizing: border-box;
      .classPic {
        width: 100%;
        height: 174px;
        box-sizing: border-box;
        border-bottom: 1px solid #f4f4f4;
        img {
          border-top-left-radius: 10px;
          border-top-right-radius: 10px;
          width: 100%;
          height: 174px;
        }
      }
      .classInfo {
        padding: 20px 20px 22px 20px;
        height: 121px;
        width: 100%;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
        .price {
          width: 100%;
          display: flex;
          justify-content: space-between;
          align-items: center;
          .red,
          .purple {
            font-size: 16px;
          }
          .update {
            padding: 3px 9px;
            background-color: #f2f2f2;
            border-radius: 5px;
            margin-right: 3px;
          }
          .tag {
            display: flex;
            align-items: center;
          }
        }
      }
      .otherInfo {
        padding: 0 12px;
        height: 50px;
        line-height: 50px;
        font-size: 14px;
        text-align: center;
        display: flex;
        justify-content: space-between;
        align-items: center;
        .photoInfo {
          display: -webkit-inline-box;
          .name {
            max-width: 90px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            word-break: keep-all;
          }
          .photo {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            margin-right: 8px;
          }
        }
        .time {
          font-size: 12px;
          color: #999;
        }
        .handle {
          > span {
            cursor: pointer;
            padding: 3px 9px;
            border-radius: 16px;
            border: 1px solid #dddddd;
            & + span {
              margin-left: 3px;
            }
          }
        }
      }
    }
  }
  .no-data-style {
    margin-top: 82px;
    text-align: center;
    p {
      margin-top: 10px;
      height: 14px;
      line-height: 14px;
      font-size: 15px;
      color: rgba(188, 188, 196, 1);
    }
  }
  // 分页
  .pagination {
    margin: 20px 0 30px;
    text-align: center;
    /deep/.el-pagination .btn-next,
    /deep/.el-pagination .btn-prev {
      width: 40px;
      height: 40px;
      padding-right: auto;
      .el-icon-arrow-left:before,
      .el-icon-arrow-right:before {
        font-size: 20px;
      }
    }
    /deep/.el-pagination {
      slot {
        span {
          font-size: 20px;
          margin: 6px 20px 0;
          color: #999;
          font-weight: normal;
        }
      }
      .el-pagination__total {
        margin: 6px 0 0 20px;
        font-size: 20px;
        color: #999;
        font-weight: normal;
      }
    }
  }
}
em,
i,
s {
  font-style: normal;
  text-decoration: none;
}
</style>
