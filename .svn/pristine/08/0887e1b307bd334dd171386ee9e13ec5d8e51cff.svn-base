/**
 * 封装axios模块
 */
import axios from 'axios'
// import store from '@/store'
// import { getItem } from '@/store/storage'
import { Message } from 'element-ui'

axios.defaults.timeout = 0
axios.defaults.withCredentials = true
// axios.defaults.baseURL = process.env.VUE_APP_API || window.location.origin
axios.defaults.baseURL = process.env.NODE_ENV === 'development' ? '/proxyHeader' : 'http://bgywebtest.tzecc.com/api/'

// axios拦截器
axios.interceptors.request.use(function (config) {
  if (window.localStorage.user) {
    config.headers.Authentication = JSON.parse(window.localStorage.getItem('user')).token
  }
  return config
}, function (error) {
  return Promise.reject(error)
})

// 返回状态判断
axios.interceptors.response.use(
  response => {
    if (response.data.code !== 200) {
      Message.error(response.data.message)
      if (response.data.code === 403) {
        setTimeout(() => {
          window.localStorage.clear()
          window.location.href = '/login'
        }, 1000)
      }
      return Promise.reject(response.data)
    }
    return response.data
  },
  error => {
    if (error === 'Error: Network Error') return Message.error('网络异常')
    console.log(error)
  }
)
let apiObject = {
  // 上传aliyun文件
  // uploadToAliFile (host, params, config) {
  //   return axios.post(host, params, config)
  // }
}
// 自动导入当前文件夹下的文件内容，合并为一个Object。
// 不太好，以后放弃
const apiFiles = require.context('.', false, /\.js$/)
apiFiles.keys().forEach(key => {
  if (key === './api.js') return
  apiObject = {
    ...apiObject,
    ...apiFiles(key).default
  }
})

export default apiObject
