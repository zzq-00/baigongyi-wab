<template>
  <div class="myHome">
    <userHeader class="headerCom" :userInfoData="userInfoData"></userHeader>
    <div class="box">
      <div class="left">
        <el-menu :default-active="$route.path" mode="horizontal" @select="handleSelect">
          <el-menu-item index="/myHome/myReply">回答 {{userInfoData.answerCount}}</el-menu-item>
          <el-menu-item index="/myHome/myQuestion">提问 {{userInfoData.questionCount}}</el-menu-item>
          <el-submenu index="3" v-if="isOwn">
            <template slot="title">文章 {{userInfoData.articleCount}}</template>
            <el-menu-item index="/myHome/publishArt">已发布</el-menu-item>
            <el-menu-item index="/myHome/draftArt">草稿</el-menu-item>
          </el-submenu>
          <el-menu-item v-else index="/myHome/publishArt">文章 {{userInfoData.articleCount}}</el-menu-item>
          <el-menu-item index="/myHome/myIdea">想法 {{userInfoData.ideaCount}}</el-menu-item>
          <el-menu-item index="/myHome/myLive">直播 {{userInfoData.liveCount}}</el-menu-item>
          <el-submenu index="6">
            <template slot="title">更多</template>
            <el-menu-item index="/myHome/myCollect">收藏</el-menu-item>
            <el-menu-item index="/myHome/myAttention">关注</el-menu-item>
          </el-submenu>
        </el-menu>
        <div class="content">
          <router-view></router-view>
        </div>
      </div>
      <div class="right">
        <div class="r-top">
          <div @click="goAttention('关注了')">
            <p>关注了</p><span>{{userInfoData.concernPersonCount}}</span>
          </div>
          <div @click="goAttention('关注者')">
            <p>关注者</p><span>{{userInfoData.fansCount}}</span>
          </div>
        </div>
        <ul class="r-bottom">
          <li :class=" { 'active-color': tabActive.includes(item.name) }" v-for="(item,index) in rightList" :key="index" @click="switchModule(item,index)">
            <img :src="item.imgs" alt="">
            <span>{{item.name}}</span>
            <span class="numbers">{{item.number}}</span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</template>

<script>
import userHeader from '@/components/userHeader'
import api from '@/fetch'
export default {
  name: 'MyHome',
  components: {
    userHeader
  },
  props: {
    userInfoData: Object
  },
  data() {
    return {
      userCollectCount: {},
      rightList: [
        { imgs: require('@/assets/images/kecheng.png'), name: '收藏的课程', number: '0' },
        { imgs: require('@/assets/images/icon_shoucang.png'), name: '收藏的专栏', number: '0' },
        { imgs: require('@/assets/images/zhibo.png'), name: '收藏的直播', number: '0' },
        { imgs: require('@/assets/images/wenzhang.png'), name: '收藏的文章', number: '0' },
        { imgs: require('@/assets/images/huida.png'), name: '收藏的回答', number: '0' },
        { imgs: require('@/assets/images/wenti.png'), name: '关注的问题', number: '0' }
      ]
    }
  },
  created() {
    this.getUserCollectCount()
  },
  computed: {
    tabActive() {
      return this.$store.state.tabActive
    },
    cancelStatus() {
      return this.$store.state.cancelStatus
    },
    isOwn() {
      if (this.$route.query.id) {
        return this.$route.query.id === this.$store.state.userInfo.accountId
      }
      return true
    }
  },
  watch: {
    cancelStatus: function(newd, old) {
      this.getUserCollectCount()
    },
    '$route.path': {
      handler: function(val) {
        if (this.tabActive) return
        if (val === '/myHome/myCollect') {
          this.$store.commit('setTab', '收藏的课程')
        } else if (val === '/myHome/myAttention') {
          this.$store.commit('setTab', '关注了')
        }
      },
      immediate: true
    }
  },
  methods: {
    handleSelect(key, keyPath) {
      if (key === '/myHome/myCollect') {
        this.$store.commit('setTab', '收藏的课程')
      } else if (key === '/myHome/myAttention') {
        this.$store.commit('setTab', '关注了')
      }
      if (this.$route.query.id) {
        this.$router.push(key + '?id=' + this.$route.query.id)
      } else {
        this.$router.push(key)
      }
    },
    // 切换模块
    switchModule(item, index) {
      if (item.name === '关注的问题') {
        this.$router.push(this.isOwn ? '/myHome/myAttention' : `/myHome/myAttention?id=${this.$route.query.id}`)
      } else {
        this.$router.push(this.isOwn ? '/myHome/myCollect' : `/myHome/myCollect?id=${this.$route.query.id}`)
      }
      this.$store.commit('setTab', item.name)
    },
    // 关注
    goAttention(item) {
      this.$store.commit('setTab', item)
      this.$router.push(this.isOwn ? '/myHome/myAttention' : `/myHome/myAttention?id=${this.$route.query.id}`)
    },
    // 个人收藏信息
    async getUserCollectCount() {
      const res = await api.userCollectCount(this.isOwn ? this.$store.state.userInfo.accountId : this.$route.query.id)
      const numbers = res.data
      this.rightList[0].number = numbers.courseCount
      this.rightList[1].number = numbers.columnCount
      this.rightList[2].number = numbers.liveCount
      this.rightList[3].number = numbers.articleCount
      this.rightList[4].number = numbers.answerCount
      this.rightList[5].number = numbers.concernQuestionCount
    }
  }
}
</script>

<style lang="less" scoped>
.myHome {
  background-color: #f4f4f4;
  .headerCom {
    width: 100%;
    margin-bottom: 20px;
  }
  .box {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    .left {
      width: 70.9%;
      border-radius: 10px;
      overflow: hidden;
      /deep/ .el-menu--horizontal > .el-menu-item,
      /deep/ .el-menu--horizontal > .el-submenu .el-submenu__title {
        height: 50px;
        line-height: 50px;
        padding: 0;
        margin: 0 20px;
      }
    }
    .right {
      width: 27.27%;
      .r-top {
        width: 240px;
        width: 100%;
        height: 80px;
        border-radius: 10px;
        box-sizing: border-box;
        background-color: #fff;
        display: flex;
        justify-content: space-around;
        align-items: center;
        > div {
          text-align: center;
          cursor: pointer;
          p {
            color: #666;
            margin-bottom: 6px;
          }
          span {
            color: #333;
            font-size: 16px;
          }
        }
      }
      .r-bottom {
        margin-top: 20px;
        padding: 10px 20px 20px 20px;
        box-sizing: border-box;
        // width: 240px;
        width: 100%;
        background-color: #fff;
        border-radius: 10px;
        .active-color {
          color: #e23732;
        }
        li {
          height: 38px;
          line-height: 38px;
          font-size: 14px;
          cursor: pointer;
          img {
            margin-right: 11px;
          }
          .numbers {
            float: right;
          }
        }
        li:hover {
          color: #e23732;
        }
      }
    }
  }
}
</style>
